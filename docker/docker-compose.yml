version: '2.2'
services:
  database:
    image: postgres:latest
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
      POSTGRES_DB:       "tracing_dev"
    volumes:
        - ./init.sql:/docker-entrypoint-initdb.d/1-init.sql
        - ./data.sql:/docker-entrypoint-initdb.d/2-data.sql
    networks:
      backend:
        aliases:
          - "database"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
  # configserver:
  #   image: tracing/configserver:0.0.1-SNAPSHOT
  #   ports:
  #      - "8071:8071"
  #   environment:
  #     ENCRYPT_KEY: "+MbQeThWmZq4t7w!z$C&F)J@NcRfUjXn"
  #   networks:
  #     backend:
  #       aliases:
  #         - "configserver"
  # eurekaserver:
  #   image: tracing/eurekaserver:0.0.1-SNAPSHOT
  #   ports:
  #     - "8070:8070"
  #   depends_on:
  #     database:
  #       condition: service_healthy
  #     configserver:
  #       condition: service_started  
  #   networks:
  #     backend:
  #       aliases:
  #         - "eurekaserver"
  # licensingservice:
  #   image: ostock/licensing-service:0.0.3-SNAPSHOT
  #   environment:
  #     PROFILE: "dev"
  #     CONFIGSERVER_URI: "http://configserver:8071"
  #     CONFIGSERVER_PORT:   "8071"
  #     DATABASESERVER_PORT: "5432"
  #     ENCRYPT_KEY:       "IMSYMMETRIC"
  #   depends_on:
  #     database:
  #       condition: service_healthy
  #     configserver:
  #       condition: service_started
  #   ports:
  #     - "8080:8080"
  #   networks:
  #     - backend
  # organizationservice:
  #   image: ostock/organization-service:0.0.1-SNAPSHOT
  #   environment:
  #     PROFILE: "dev"
  #     CONFIGSERVER_URI: "http://configserver:8071"
  #     CONFIGSERVER_PORT:   "8071"
  #     DATABASESERVER_PORT: "5432"
  #     ENCRYPT_KEY:       "IMSYMMETRIC"
  #   depends_on:
  #     database:
  #       condition: service_healthy
  #     configserver:
  #       condition: service_started
  #   ports:
  #     - "8081:8081"
  #   networks:
  #     - backend

networks:
  backend:
    driver: bridge